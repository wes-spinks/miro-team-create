apiVersion: template.openshift.io/v1
kind: Template
labels:
  paas.redhat.com/appcode: ${appcode}
  template: miro-resource-mgmt-template
metadata:
  name: miro-resource-mgmt-template
objects:
- apiVersion: v1
  data: ${{VAULT_CFG}}
  kind: ConfigMap
  metadata:
    name: ${app}-vault-cfg
- apiVersion: v1
  data: ${{app_environment}}
  kind: ConfigMap
  metadata:
    name: miro-resource-mgmt-env
- apiVersion: v1
  data:
    MIRO_TOKEN: ${MIRO_TOKEN}
    MIRO_SA_ID: ${MIRO_SA_ID}
    ORG_ID: ${ORG_ID}
    SMAR_001_CFG: ${SMAR_001_CFG}
  kind: ConfigMap
  metadata:
    labels:
      paas.redhat.com/appcode: ${appcode}
    name: miro-resource-mgmt-cfgmap
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${app}
      application: ${app}
      paas.redhat.com/appcode: ${appcode}
    name: ${app}
    namespace: ${project}
  spec:
    replicas: ${{replicas}}
    selector:
      app: ${app}
      deploymentConfig: ${app}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${app}
          deploymentConfig: ${app}
      spec:
        containers:
        - env:
          - name: APP_FILE
            value: app.py
          - name: GIT_SSL_NO_VERIFY
            value: 'true'
          envFrom:
          - configMapRef:
              name: miro-resource-mgmt-cfgmap
          - configMapRef:
              name: miro-resource-mgmt-env
          image: images.spinks.work/auto/${app}:${tag}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /_health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 90
            successThreshold: 1
            timeoutSeconds: 8
          name: ${app}
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_health
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 8
          resources:
            limits:
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/pki/tls/certs/generated
            name: ${app}-certs-volume
            readOnly: true
          - mountPath: /secrets
            name: vault-volume
            readOnly: true
        - env:
          - name: VAULT_SEC_ENTRY
            value: secid
          - name: VAULT_ADDR
            value: https://vault.spinks.work:8200/
          image: images.spinks.work/auto/vault-template:main
          name: vault-container
          readinessProbe:
            exec:
              command:
              - ls
              - /vaultd/.vault-token
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
          - mountPath: /vaultd/secrets
            name: vault-volume
            readOnly: false
          - mountPath: /vaultd/config
            name: vault-template
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: images-paas-push-config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${app}-certs-volume
          secret:
            secretName: ${app}-certs
        - name: ca-crt
          secret:
            defaultMode: 420
            secretName: ca-crt
        - emptyDir:
            medium: Memory
          name: vault-volume
        - configMap:
            name: ${app}-vault-cfg
          name: vault-template
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: ${app}-certs
    labels:
      app: ${app}
      appcode: ${appcode}
      template: ${app}
    name: ${app}
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: ${app}
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: The label for objects generated by this template
  displayName: App
  name: app
  required: true
  value: miro-team-create
- description: Cfg Map Env
  displayName: environment
  name: app_environment
  value: '{}'
- description: CMDB appcode
  displayName: appcode
  name: appcode
  value: MTC01
- name: replicas
  required: true
  value: '1'
- description: The registry image tag
  displayName: Tag
  name: tag
  required: true
  value: main
- description: Full Openshift project name (with suffix)
  displayName: Project
  name: project
  required: true
  value: runtime-int
- description: vault configuration
  displayName: Vault Configuration
  name: VAULT_CFG
  required: true
  value: null
